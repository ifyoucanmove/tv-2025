var s=Object.create;var k=Object.defineProperty,t=Object.defineProperties,u=Object.getOwnPropertyDescriptor,v=Object.getOwnPropertyDescriptors,w=Object.getOwnPropertyNames,g=Object.getOwnPropertySymbols,m=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,x=Reflect.get;var o=a=>{throw TypeError(a)};var j=(a,b,c)=>b in a?k(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,z=(a,b)=>{for(var c in b||(b={}))l.call(b,c)&&j(a,c,b[c]);if(g)for(var c of g(b))n.call(b,c)&&j(a,c,b[c]);return a},A=(a,b)=>t(a,v(b));var B=(a=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(a,{get:(b,c)=>(typeof require<"u"?require:b)[c]}):a)(function(a){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+a+'" is not supported')}),C=a=>b=>{var c=a[b];if(c)return c();throw new Error("Module not found in bundle: "+b)};var D=(a,b)=>{var c={};for(var d in a)l.call(a,d)&&b.indexOf(d)<0&&(c[d]=a[d]);if(a!=null&&g)for(var d of g(a))b.indexOf(d)<0&&n.call(a,d)&&(c[d]=a[d]);return c};var E=(a,b)=>()=>(b||a((b={exports:{}}).exports,b),b.exports);var y=(a,b,c,d)=>{if(b&&typeof b=="object"||typeof b=="function")for(let e of w(b))!l.call(a,e)&&e!==c&&k(a,e,{get:()=>b[e],enumerable:!(d=u(b,e))||d.enumerable});return a};var F=(a,b,c)=>(c=a!=null?s(m(a)):{},y(b||!a||!a.__esModule?k(c,"default",{value:a,enumerable:!0}):c,a));var G=(a,b,c)=>j(a,typeof b!="symbol"?b+"":b,c),p=(a,b,c)=>b.has(a)||o("Cannot "+c);var H=(a,b,c)=>(p(a,b,"read from private field"),c?c.call(a):b.get(a)),I=(a,b,c)=>b.has(a)?o("Cannot add the same private member more than once"):b instanceof WeakSet?b.add(a):b.set(a,c),J=(a,b,c,d)=>(p(a,b,"write to private field"),d?d.call(a,c):b.set(a,c),c);var K=(a,b,c)=>x(m(a),c,b);var L=(a,b,c)=>new Promise((d,e)=>{var q=f=>{try{h(c.next(f))}catch(i){e(i)}},r=f=>{try{h(c.throw(f))}catch(i){e(i)}},h=f=>f.done?d(f.value):Promise.resolve(f.value).then(q,r);h((c=c.apply(a,b)).next())});export{z as a,A as b,B as c,C as d,D as e,E as f,F as g,G as h,H as i,I as j,J as k,K as l,L as m};

import{A as E,D as $,Gb as Y,L as R,N as v,O as P,P as I,Q as V,T as F,X as T,b as g,fa as G,h as y,k,q as M,vb as U}from"./chunk-HGIDUMG6.js";import{m as C}from"./chunk-DDPKQVXB.js";var D=function(i){return i.readonly="readonly",i.readwrite="readwrite",i}(D||{}),z=new v(null),L=new v("Indexed DB"),H=new v("Server Indexed DB");function J(i,u){return i.objectStoreNames.contains(u)}function b(i,u,p){if(!i){p("You need to use the openDatabase function to create a database before you query it!");return}J(i,u)||p(`objectStore does not exists: ${u}`)}function j(i,u){let p=i.transaction(u.storeName,u.dbMode);return p.onerror=u.error,p.onabort=u.abort,p}function w(i,u,p,e){return{storeName:u,dbMode:i,error:n=>{p(n)},abort:n=>{p(n)}}}var A=[];function m(i,u,p,e){return new Promise((n,t)=>{i||t("IndexedDB not available");let r=i.open(u,p),o;r.onsuccess=()=>{o=r.result,A.push(o),n(o)},r.onerror=()=>{t(`IndexedDB error: ${r.error}`)},typeof e=="function"&&(r.onupgradeneeded=c=>{e(c,o)})})}function O(i,u,p,e,n){return C(this,null,function*(){return new Promise((t,r)=>{if(!i)return;let o=i.open(u,p);o.onupgradeneeded=c=>C(null,null,function*(){let s=c.target.result,l=e.map(a=>C(null,null,function*(){if(!s.objectStoreNames.contains(a.store)){let d=s.createObjectStore(a.store,a.storeConfig);for(let h of a.storeSchema)d.createIndex(h.name,h.keypath,h.options)}}));yield Promise.all(l);let f=n&&n();if(f){let a=Object.keys(f).map(d=>parseInt(d,10)).filter(d=>d>c.oldVersion).sort((d,h)=>d-h);for(let d of a)f[d](s,o.transaction)}s.close(),t()}),o.onsuccess=c=>{c.target.result.close(),t()},o.onerror=c=>{r(c)}})})}function Q(i,u,p){if(!i||!u||!p)throw Error('Params: "dbName", "version", "storeName" are mandatory.');return new g(e=>{try{let n=u+1,t=indexedDB.open(i,n);t.onupgradeneeded=r=>{let o=r.target.result;o.deleteObjectStore(p),o.close(),console.log("onupgradeneeded"),e.next(),e.complete()},t.onerror=r=>e.error(r)}catch(n){e.error(n)}})}function W(i){return new Promise((u,p)=>{if(!i){p(new Error("No database to close"));return}try{i.close(),u()}catch(e){p(`Error closing database: ${e}`)}})}function x(){return function(i,u,p){let e=p.value;return p.value=function(...n){let t=e.apply(this,n);return t instanceof g?t.pipe($(()=>C(this,null,function*(){let r=A.map(o=>C(this,null,function*(){yield W(o)}));yield Promise.all(r),A.length=0}))):t},p}}var Z=(()=>{let u=class u{constructor(e,n){this.dbConfigs=e,this.indexedDB=n,this.defaultDatabaseName=null,Object.values(this.dbConfigs).forEach((t,r,o)=>this.instanciateConfig(t,o.length===1))}instanciateConfig(e,n){return C(this,null,function*(){var t,r;if(!e.name)throw new Error("NgxIndexedDB: Please, provide the dbName in the configuration");if((t=e.isDefault)!=null&&t&&this.defaultDatabaseName)throw new Error("NgxIndexedDB: Only one database can be set as default");((r=e.isDefault)!=null&&r&&!this.defaultDatabaseName||n)&&(this.defaultDatabaseName=e.name,this.selectedDb=e.name),yield O(this.indexedDB,e.name,e.version,e.objectStoresMeta,e.migrationFactory),m(this.indexedDB,e.name).then(o=>{o.version!==e.version&&(U()&&(console.warn(`
            Your DB Config doesn't match the most recent version of the DB with name ${e.name}, please update it
            DB current version: ${o.version};
            Your configuration: ${e.version};
            `),console.warn(`Using latest version ${o.version}`)),this.dbConfigs[e.name].version=o.version),o.close()})})}get dbConfig(){return this.dbConfigs[this.selectedDb]}getDatabaseVersion(){return new g(e=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{e.next(n.version),e.complete()}).catch(n=>e.error(`error during get version of database => ${n} `))})}selectDb(e){if(e=e!=null?e:this.defaultDatabaseName,!e)throw new Error("No database name specified and no default database set.");if(!Object.keys(this.dbConfigs).includes(e))throw new Error(`NgxIndexedDB: Database ${e} is not initialized.`);this.selectedDb=e}createObjectStore(e,n){return C(this,null,function*(){let t=[e];yield O(this.indexedDB,this.dbConfig.name,++this.dbConfig.version,t,n)})}createDynamicObjectStore(e,n){return C(this,null,function*(){let t=[e];yield O(this.indexedDB,this.dbConfig.name,this.dbConfig.version,t,n)})}add(e,n,t){return new g(r=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{let s=j(o,w(D.readwrite,e,a=>r.error(a))).objectStore(e),f=!!t?s.add(n,t):s.add(n);f.onsuccess=a=>C(this,null,function*(){let d=a.target.result,h=s.get(d);h.onsuccess=S=>{r.next(S.target.result),r.complete()},h.onerror=S=>{r.error(S)}}),f.onerror=a=>{r.error(a)}}).catch(o=>r.error(o))})}bulkAdd(e,n){let t=new Promise((r,o)=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{let l=j(c,w(D.readwrite,e,r,o)).objectStore(e),f=n.map(a=>new Promise(d=>{let h=a.key;delete a.key;let B=!!h?l.add(a,h):l.add(a);B.onsuccess=q=>{let _=q.target.result;d(_)}}));r(Promise.all(f))}).catch(c=>o(c))});return k(t)}bulkDelete(e,n){let t=n.map(r=>new Promise((o,c)=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{let l=j(s,w(D.readwrite,e,c,o));l.objectStore(e).delete(r),l.oncomplete=()=>{this.getAll(e).pipe(E(1)).subscribe(a=>{o(a)})}}).catch(s=>c(s))}));return k(Promise.all(t))}getByKey(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{let s=j(r,w(D.readonly,e,t.error)).objectStore(e).get(n);s.onsuccess=l=>{t.next(l.target.result),t.complete()},s.onerror=l=>{t.error(l)}}).catch(r=>t.error(r))})}bulkGet(e,n){let t=n.map(r=>this.getByKey(e,r));return new g(r=>{M(t).subscribe(o=>{r.next(o),r.complete()})})}getByID(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{b(r,e,l=>t.error(l));let s=j(r,w(D.readonly,e,t.error,t.next)).objectStore(e).get(n);s.onsuccess=l=>{t.next(l.target.result),t.complete()}}).catch(r=>t.error(r))})}getByIndex(e,n,t){return new g(r=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{b(o,e,a=>r.error(a));let f=j(o,w(D.readonly,e,r.error)).objectStore(e).index(n).get(t);f.onsuccess=a=>{r.next(a.target.result),r.complete()}}).catch(o=>r.error(o))})}getAll(e){return new g(n=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{b(t,e,s=>n.error(s));let c=j(t,w(D.readonly,e,n.error,n.next)).objectStore(e).getAll();c.onerror=s=>{n.error(s)},c.onsuccess=({target:{result:s}})=>{n.next(s),n.complete()}}).catch(t=>n.error(t))})}update(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{b(r,e,l=>t.error(l));let c=j(r,w(D.readwrite,e,l=>t.error(l))).objectStore(e),s=c.put(n);s.onsuccess=l=>C(this,null,function*(){let f=l.target.result,a=c.get(f);a.onsuccess=d=>{t.next(d.target.result),t.complete()}})}).catch(r=>t.error(r))})}bulkPut(e,n){let t;return new g(r=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{b(o,e,s=>r.error(s)),t=j(o,w(D.readwrite,e,s=>r.error(s)));let c=t.objectStore(e);n.forEach((s,l)=>{let f=c.put(s);l===n.length-1&&(f.onsuccess=a=>{t.commit(),r.next(a.target.result),r.complete()}),f.onerror=a=>{t.abort(),r.error(a)}})}).catch(o=>{t==null||t.abort(),r.error(o)})})}delete(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{b(r,e,s=>t.error(s));let o=j(r,w(D.readwrite,e,s=>t.error(s)));o.objectStore(e).delete(n),o.onerror=s=>t.error(s),o.oncomplete=()=>{this.getAll(e).pipe(E(1)).subscribe({next:s=>{t.next(s)},error:s=>t.error(s),complete:()=>t.complete()})}}).catch(r=>t.error(r))})}deleteByKey(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{b(r,e,s=>t.error(s));let o=j(r,w(D.readwrite,e,s=>t.error(s)));o.objectStore(e).delete(n),o.onerror=s=>t.error(s),o.oncomplete=()=>{t.next(),t.complete()}}).catch(r=>t.error(r))})}deleteAllByIndex(e,n,t,r){return new g(o=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{b(c,e,d=>o.error(d));let a=j(c,w(D.readwrite,e,o.error)).objectStore(e).index(n).openCursor(t,r);a.onerror=d=>o.error(d),a.onsuccess=d=>{let h=d.target.result;h?(h.delete(),h.continue()):(o.next(),o.complete())}}).catch(c=>o.error(c))})}clear(e){return new g(n=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{b(t,e,c=>n.error(c));let r=j(t,w(D.readwrite,e,c=>n.error(c)));r.objectStore(e).clear(),r.onerror=c=>n.error(c),r.oncomplete=()=>{n.next(),n.complete()}}).catch(t=>n.error(t))})}deleteDatabase(){return new g(e=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>C(this,null,function*(){n.close();let t=this.indexedDB.deleteDatabase(this.dbConfig.name);t.onsuccess=()=>{e.next(),e.complete()},t.onerror=r=>e.error(r),t.onblocked=()=>{console.warn("Delete blocked: Ensure all tabs, instances, or connections are closed. Database name:",this.dbConfig.name),e.error(new Error("Unable to delete database because it's blocked"))}})).catch(n=>e.error(n))})}openCursor(e){let{storeName:n,query:t,direction:r,mode:o=D.readonly}=e;return new g(c=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{b(s,n,d=>c.error(d));let l=j(s,w(o,n,c.error)),a=l.objectStore(n).openCursor(t,r);l.oncomplete=()=>c.complete(),a.onerror=d=>c.error(d),a.onsuccess=d=>{let h=d.target.result;h&&c.next(h)}}).catch(s=>c.error(s))})}openCursorByIndex(e){let{storeName:n,indexName:t,query:r,direction:o,mode:c=D.readonly}=e;return new g(s=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(l=>{b(l,n,S=>s.error(S));let f=j(l,w(c,n,s.error)),h=f.objectStore(n).index(t).openCursor(r,o);f.oncomplete=()=>s.complete(),h.onerror=S=>s.error(S),h.onsuccess=S=>{let B=S.target.result;B&&s.next(B)}}).catch(l=>s.error(l))})}getAllByIndex(e,n,t,r){return new g(o=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{b(c,e,h=>o.error(h));let a=j(c,w(D.readonly,e,o.error)).objectStore(e).index(n).openCursor(t,r),d=[];a.onerror=h=>o.error(h),a.onsuccess=h=>{let S=h.target.result;S?(d.push(S.value),S.continue()):(o.next(d),o.complete())}}).catch(c=>o.error(c))})}getAllKeysByIndex(e,n,t,r){return new g(o=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{b(c,e,h=>o.error(h));let f=j(c,w(D.readonly,e,o.error)).objectStore(e).index(n),a=[],d=f.openKeyCursor(t,r);d.onerror=h=>o.error(h),d.onsuccess=h=>{let S=h.target.result;if(S){let{primaryKey:B,key:q}=S;a.push({primaryKey:B,key:q}),S.continue()}else o.next(a),o.complete()}}).catch(c=>o.error(c))})}count(e,n){return new g(t=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{b(r,e,l=>t.error(l));let s=j(r,w(D.readonly,e,t.error)).objectStore(e).count(n);s.onerror=l=>t.error(l),s.onsuccess=l=>{t.next(l.target.result),t.complete()}}).catch(r=>t.error(r))})}countByIndex(e,n,t){return new g(r=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(o=>{b(o,e,a=>r.error(a));let f=j(o,w(D.readonly,e,r.error)).objectStore(e).index(n).count(t);f.onerror=a=>r.error(a),f.onsuccess=a=>{r.next(a.target.result),r.complete()}}).catch(o=>r.error(o))})}deleteObjectStore(e){return Q(this.dbConfig.name,++this.dbConfig.version,e)}getAllObjectStoreNames(){return new g(e=>{m(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{e.next(Array.from(n.objectStoreNames)),e.complete()}).catch(n=>e.error(n))})}};u.\u0275fac=function(n){return new(n||u)(P(z),P(L))},u.\u0275prov=R({token:u,factory:u.\u0275fac});let i=u;return y([x()],i.prototype,"getDatabaseVersion",null),y([x()],i.prototype,"add",null),y([x()],i.prototype,"bulkAdd",null),y([x()],i.prototype,"bulkDelete",null),y([x()],i.prototype,"getByKey",null),y([x()],i.prototype,"bulkGet",null),y([x()],i.prototype,"getByID",null),y([x()],i.prototype,"getByIndex",null),y([x()],i.prototype,"getAll",null),y([x()],i.prototype,"update",null),y([x()],i.prototype,"bulkPut",null),y([x()],i.prototype,"delete",null),y([x()],i.prototype,"deleteByKey",null),y([x()],i.prototype,"deleteAllByIndex",null),y([x()],i.prototype,"clear",null),y([x()],i.prototype,"deleteDatabase",null),y([x()],i.prototype,"openCursor",null),y([x()],i.prototype,"openCursorByIndex",null),y([x()],i.prototype,"getAllByIndex",null),y([x()],i.prototype,"getAllKeysByIndex",null),y([x()],i.prototype,"count",null),y([x()],i.prototype,"countByIndex",null),y([x()],i.prototype,"getAllObjectStoreNames",null),i})(),K=class{cmp(){return 0}databases(){return Promise.resolve([])}deleteDatabase(){return{onupgradeneeded:null,onblocked:null,onerror:null,onsuccess:null,error:null}}open(){return{onupgradeneeded:null,onblocked:null,onerror:null,onsuccess:null,error:null}}};function X(){var p;F(X);let i=I(G),u=(p=I(H,{optional:!0}))!=null?p:new K;return Y(i)?I(T).defaultView.indexedDB:u}var ue=(...i)=>V([...N(...i)]),N=(...i)=>{let u=i.reduce((p,e)=>(p[e.name]=e,p),{});return[Z,{provide:z,useValue:u},{provide:L,useFactory:X}]};export{Z as a,ue as b};
